#cloud-config

---
coreos:
  etcd2:
    proxy: readonly
    data-dir: /var/lib/etcd2/
    initial-cluster-token: etcd-cluster
    listen-client-urls: http://127.0.0.1:2379,http://127.0.0.1:8080
    initial-cluster: etcd01=http://{{.MasterIpAddr}}:2380
  fleet:
    etcd-servers: http://{{.MasterIpAddr}}:2379
    metadata: "role=peon,kube-role=node"
    public-ip: {{.HostIpAddr}}
  units:
  - name: etcd2.service
    enable: true
    command: start
    # Disabling etcd may not be necessary but in case it is...
  - name: etcd.service
    enable: false
  - name: fleet.service
    command: start
  - flannel:
      etcd-endpoints: http://{{.MasterIpAddr}}:4001
      interface: {{.HostIpAddr}}
  - name: setup-network-environment.service
    command: start
    content: |
      [Unit]
      Description=Setup Network Environment
      Documentation=https://github.com/kelseyhightower/setup-network-environment
      Requires=network-online.target
      After=network-online.target
      Before=flanneld.service

      [Service]
      ExecStartPre=-/usr/bin/docker kill setup-network-environment
      ExecStart=/usr/bin/docker run --net host --privileged=true --name setup-network-environment {{.MasterIpAddr}}:5000/setup-network-environment
      ExecStop=-/usr/bin/docker rm setup-network-environment
      Type=oneshot
  - name: docker.service
    content: |    
      [Unit]
      Description=Docker Application Container Engine
      Documentation=http://docs.docker.com
      After=docker.socket early-docker.target network.target
      Requires=docker.socket early-docker.target

      [Service]
      Environment=TMPDIR=/var/tmp
      EnvironmentFile=-/run/flannel_docker_opts.env
      MountFlags=slave
      LimitNOFILE=1048576
      LimitNPROC=1048576
      ExecStart=/usr/lib/coreos/dockerd --daemon --host=fd:// $DOCKER_OPTS $DOCKER_OPT_BIP $DOCKER_OPT_MTU $DOCKER_OPT_IPMAS

      [Install]
      WantedBy=multi-user.target
  - name: kubelet.service
    command: start
    content: |
      [Unit]
      Description=kubelet
      Documentation=https://github.com/GoogleCloudPlatform/kubernetes
      After=docker.service
      Requires=docker.service

      [Service]
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker kill kubelet
      ExecStartPre=-/usr/bin/docker rm kubelet
      ExecStart=/usr/bin/docker run --net=host --privileged=true -p 10255:10255 -p 10250:10250 \
        -v "/usr/bin/nsenter:/nsenter"  -v "/usr:/usr" -v "/lib64:/lib64" \
        -v "/etc/kubernetes:/etc/kubernetes" -v "/etc/os-release:/etc/os-release" \
        -v "/usr/share/ca-certificates/:/etc/ssl/certs" -v "/sys:/sys:ro" \
        -v "/etc/machine-id:/etc/machine-id" -v "/var/lib/docker/:/var/lib/docker:ro" \
        -v "/var/lib/kubelet/:/var/lib/kubelet:rw" -v "/var/run:/var/run:rw" \
        --name kubelet {{.MasterIpAddr}}:5000/kubelet:0.18.2 /kubelet \
        --address=0.0.0.0 --enable_server=true --port=10250 --read_only_port=10255 \
        --api_servers={{.MasterIpAddr}}:8080 --cluster_dns=10.100.0.10 \
        --cluster_domain=cluster.local --healthz_bind_address=0.0.0.0 \
        --hostname_override={{.HostIpAddr}} \
        --healthz_port=10254  --cadvisor_port=4194 --log_cadvisor_usage=true --logtostderr=true --v=0
      Restart=always
      RestartSec=10
ssh-authorized-keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1WXArdPrWtw4hoUsSZOFLUqPmrciREYuSqPoyek1fxv+NsDy5kJ4khserlFLs5HkPe6MBi2vlF1wBp3dg5XcKClUyRShCadmNbiOvGJoafqoP5btUhDdaFkYfPLhQ7S0IN5Vitk2YvmDLMnfnujkKKtQojRwIuBx0udxmigGjIu16C46LbNeTCzoJVm2dSl1lsG7IouQHcjgh77RM1HV81dNEPQrb/id6ICELppqfwK6j9fRoa8Yh33xhOALb50h71ma0EUGsTFBFaa372438aoFZOrIOLpOLEn36lDTXKnRrBQXlirt6o3kxSwM37Z1jRmsdA0UOtL5oNFPYmBJf leetchang@gmail.com